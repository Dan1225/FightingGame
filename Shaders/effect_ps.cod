//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// point_sampler_state               sampler      NA          NA             s0      1 
// color_texture                     texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 3
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.color.x; v1.y <- pin.color.y; v1.z <- pin.color.z; v1.w <- pin.color.w; 
//   v2.x <- pin.texcoord.x; v2.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 10 "C:\Users\2190171\Desktop\個人製作\Shaders\effect_ps.hlsl"
mov r0.x, l(0)  // r0.x <- colour_map_mip_level

#line 11
resinfo_indexable(texture2d)(float,float,float,float)_uint r0.xy, r0.x, t0.xyzw
mov r0.x, r0.x  // r0.x <- colour_map_width
mov r0.y, r0.y  // r0.y <- colour_map_height

#line 13
utof r0.x, r0.x
div r1.x, l(1.000000), r0.x
utof r0.x, r0.y
div r1.y, l(1.000000), r0.x
mul r0.xy, r1.xyxx, l(2.500000, 2.500000, 0.000000, 0.000000)  // r0.x <- step.x; r0.y <- step.y

#line 14
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v2.xyxx, t0.xyzw, s0
mul r1.xyzw, r1.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z; r1.w <- color.w

#line 15
add r2.x, r0.x, v2.x
add r2.y, v2.y, l(0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xyxx, t0.xyzw, s0
mul r2.xyzw, r2.xyzw, l(0.125000, 0.125000, 0.125000, 0.125000)
add r1.xyzw, r1.xyzw, r2.xyzw

#line 16
mov r0.z, -r0.x
add r2.x, r0.z, v2.x
add r2.y, v2.y, l(0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xyxx, t0.xyzw, s0
mul r2.xyzw, r2.xyzw, l(0.125000, 0.125000, 0.125000, 0.125000)
add r1.xyzw, r1.xyzw, r2.xyzw

#line 17
add r2.x, v2.x, l(0.000000)
add r2.y, r0.y, v2.y
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xyxx, t0.xyzw, s0
mul r2.xyzw, r2.xyzw, l(0.125000, 0.125000, 0.125000, 0.125000)
add r1.xyzw, r1.xyzw, r2.xyzw

#line 18
mov r0.z, l(-0.000000)
add r2.x, r0.z, v2.x
mov r0.z, -r0.y
add r2.y, r0.z, v2.y
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xyxx, t0.xyzw, s0
mul r2.xyzw, r2.xyzw, l(0.125000, 0.125000, 0.125000, 0.125000)
add r1.xyzw, r1.xyzw, r2.xyzw

#line 19
add r2.x, r0.x, v2.x
add r2.y, r0.y, v2.y
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xyxx, t0.xyzw, s0
mul r2.xyzw, r2.xyzw, l(0.062500, 0.062500, 0.062500, 0.062500)
add r1.xyzw, r1.xyzw, r2.xyzw

#line 20
mov r0.z, -r0.x
add r2.x, r0.z, v2.x
add r2.y, r0.y, v2.y
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xyxx, t0.xyzw, s0
mul r2.xyzw, r2.xyzw, l(0.062500, 0.062500, 0.062500, 0.062500)
add r1.xyzw, r1.xyzw, r2.xyzw

#line 21
mov r0.z, -r0.x
add r2.x, r0.z, v2.x
mov r0.z, -r0.y
add r2.y, r0.z, v2.y
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xyxx, t0.xyzw, s0
mul r2.xyzw, r2.xyzw, l(0.062500, 0.062500, 0.062500, 0.062500)
add r1.xyzw, r1.xyzw, r2.xyzw

#line 22
add r2.x, r0.x, v2.x
mov r0.x, -r0.y
add r2.y, r0.x, v2.y
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, r2.xyxx, t0.xyzw, s0
mul r0.xyzw, r0.xyzw, l(0.062500, 0.062500, 0.062500, 0.062500)
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 24
itof r1.w, l(1)  // r1.w <- color_filter.w
mov r1.xyz, l(2.500000,1.000000,0.200000,0)  // r1.x <- color_filter.x; r1.y <- color_filter.y; r1.z <- color_filter.z

#line 25
mul o0.xyzw, r0.xyzw, r1.xyzw
ret 
// Approximately 62 instruction slots used
